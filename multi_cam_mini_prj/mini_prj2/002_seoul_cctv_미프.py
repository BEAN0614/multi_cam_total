# -*- coding: utf-8 -*-
"""002_Seoul_CCTV_미프.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1c-V2atKmmiZDOOtmjR4Rff9cf1HR4eLL

# 서울시 CCTV 현황 분석


## https://opengov.seoul.go.kr

# O. 한글폰트 설치 후 진행

> ## 1) 한글 폰트 설치
"""

import matplotlib.font_manager as fm

# Linux
!apt-get -qq -y install fonts-nanum > /dev/null

# Colab
fontpath = '/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf'
font = fm.FontProperties(fname = fontpath, size = 10)
# fm._rebuild()
!rm -rf ~/.cache/matplotlib -rf

"""> ## 2) <font color = 'red'>설치 후 '**런타임 다시 시작**'</font>

* 런타임 강제 종료 후 다시 시작
"""

import os

os.kill(os.getpid(), 9)

"""> ## 3) 한글 폰트 설정"""

import matplotlib.pyplot as plt
import matplotlib as mpl
import matplotlib.font_manager as fm

mpl.rcParams['axes.unicode_minus'] = False

path = '/usr/share/fonts/truetype/nanum/NanumGothicBold.ttf'
font_name = fm.FontProperties(fname = path, size = 10).get_name()
plt.rc('font', family = font_name)
# fm._rebuild()
!rm -rf ~/.cache/matplotlib -rf

"""# I. 'seoulCCTV.csv' 파일 전처리"""

import warnings
warnings.filterwarnings('ignore')

"""> ## 1) 'seoulCCTV.csv' 파일 읽어오기"""

import pandas as pd

url = 'https://raw.githubusercontent.com/rusita-ai/pyData/master/seoulCCTV.csv'
CCTV = pd.read_csv(url)

CCTV.head()

"""> ## 2) '기관명'을 '구별'로 변경

* 열(Column) 이름 확인
"""



"""* 첫번째 열 이름 변경('기관명' -> '구별')"""





"""> ## 3) CCTV 데이터 현황 파악

* '소계' 오름차순 정렬
"""



"""* '소계' 내림차순 정렬"""



"""> ## 4) '최근증가율' 열(Column) 추가

* 최근 3년 CCTV '최근증가율' 열 추가
"""

CCTV['최근증가율'] = ((CCTV['2016년'] + CCTV['2015년'] + CCTV['2014년']) / CCTV['2013년도 이전']) * 100



"""* '최근증가율' 열로 내림차순 정렬"""



"""# II.  'seoulPopulation.xlsx' 파일 전처리

> ## 1) 'seoulPopulation.xlsx' 파일 읽어오기
"""

import pandas as pd

url = 'https://raw.githubusercontent.com/rusita-ai/pyData/master/seoulPopulation.xlsx'
SDFP = pd.read_excel(url,
                     header = 2,
                     usecols = 'B, D, G, J, N')

SDFP.head()

"""> ## 2) 열(Column) 이름 변경"""

SDFP.rename(columns={SDFP.columns[0]:'구별',
                     SDFP.columns[1]:'인구수',
                     SDFP.columns[2]:'한국인',
                     SDFP.columns[3]:'외국인',
                     SDFP.columns[4]:'고령자'}, inplace=True)

SDFP.head()

"""> ## 3) NaN 확인

* .info( )
"""



"""* .value_counts( )
 - '합계' 삭제 필요
"""



"""* .unique( )"""



"""> ## 4) 인구 데이터 현황 파악

* '합계' 행(Row) 삭제
"""





"""* '합계' 행(Row) 삭제 확인"""



"""> ## 5) 파생변수 추가

* '외국인비율'과 '고령자비율' 열(Column)을 계산 후 추가
"""

SDFP['외국인비율'] = SDFP['외국인'] / SDFP['인구수'] * 100
SDFP['고령자비율'] = SDFP['고령자'] / SDFP['인구수'] * 100



"""* '인구수' 내림차순 정렬"""



"""* '외국인' 내림차순 정렬"""



"""* '외국인비율' 내림차순 정렬"""



"""* '고령자' 내림차순 정렬"""



"""* '고령자비율' 내림차순 정열"""



"""# III. CCTV 데이터와 인구 데이터 합치기

> ## 1) 두 데이터프레임에 공통으로 있는 '구별'로 merge
"""







"""> ## 2) 불필요한 열(Column) 삭제"""





"""> ## 3) '구별'을 index로 지정"""





"""> ## 4) 상관계수(Correlation Coefficient)

* 범위 : -1 ~ 1(0이면 관계없음)
* '고령자비율' vs. '소계'
"""

import numpy as np

print(np.corrcoef(DF['고령자비율'], DF['소계']))

"""* '외국인비율' vs. '소계'"""

print(np.corrcoef(DF['외국인비율'], DF['소계']))

"""* '인구수'     vs. '소계'"""

print(np.corrcoef(DF['인구수'], DF['소계']))

"""> ## 5) CCTV 개수('소계')와 '인구수'의 관계

* '소계'(CCTV 개수) 내림차순 정렬
"""



"""* '인구수' 내림차순 정렬"""



"""# IV. Visualization

> ## 1) 막대(bar) 그래프 - pandas

* '소계'
"""



"""* 정렬 - sort_value( )

"""



"""* '인구수' 대비 CCTV비율 계산 후 정렬하여 시각화"""





"""> ## 2) 산점도(scatter) - matplotlib

* '소계' ~ '인구수'
"""



"""> ## 3) 회귀선 추가 - seaborn"""



"""#
#
#
# End Of Document
#
#
#
"""